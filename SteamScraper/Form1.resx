<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAD4GQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAJi
        S0dEAP+Hj8y/AAAACXBIWXMAAABIAAAASABGyWs+AAAZOklEQVR42u2dfXwU1bnHvwuBhBiBy2tkIAmK
        QBABMdKK6EVEtNiLim8oSH1FtL4Ur1Vsvbe+UGztLR/rC9VKa+Ui1QKKrQShgLSijRIB4QohVgkvA+FF
        wJCEgJC9fyTZzGx2Z+flzMzuzvn+k93MzJk55/z2nDPPec5zQuEQkgDTyu8HkPiLFEDAkQIIOFIAAUcK
        IOBIAQQcKYCAIwUQcKQAAo4UQMCRAgg4UgABRwog4EgBBBwpgIAjBRBwpAACjhRAwJECCDhSAAFHCiDg
        SAEEHCmAgCMFEHAy/Lu10pP+9KcvfelGDjnkkB0QQdZTSzXVVFNJOWWUs1mt9OdRQt6vDFJ6MpJRjCLP
        nywnKf9iFatZ7bUQPBWA0o0JTKLI2yymGB8xlz+rh726nWcCUMYylcv97HJSiDqKma2u8uJWHghAacW1
        TGeIF9lJK0qYqb7r9k1cF4ByLTPo63Y20paNTFffc/MGrgpA6cMLjHHz8QPBQh5Ud7mVuGsCUDL4CdPJ
        cuvBA0U1j/OsWu9G0i4JQMnjDb7rbqkEjBVMduMV0RXDizKOdbL6BTOadcoo8cm6IADlSRbTyf0SCRy5
        LFceEp2o4C5AyWA2d3hXJgFklipUBEIFoGTxBuO8LpHAMZ9b1BOiEhMoAKUtxbjQS0lasJjrRUlA2BhA
        acU8Wf0ecRWzRSUlbhD4HNf6UhjB5A5lhpiEBHUBykM842d5BJKp6u+cJyJEAMoIVsl5Ps+pY7i6wWki
        AgSgdGEdPf0ujUBSTpFa7SwJEWOAP8rq94m+OO4EHAtAmcxYv8shwExQHNpdHHYBSkfK6OZ3KQSaCgaq
        tfYvd9oCzJDV7zMFTHdyuaMWQBlCaUAcuZOZOgaqX9m92Fn1/bes/iQgy0kb4KAFUAayQQogKThOX3WH
        vUudVOB0Wf1JQltsTxHbbgGUAsql9S9pqCNPPWDnQvu/4cmy+pOILG6yd6F9AUzyO88SHTbrw6YAlO/S
        x+8cS3QUKf3tXGa3BZC//+TDVp3YFcDlfudW0gJbdWLrLUDJo8Lv3EpaUE8X68vK7bUA0vcvGWnFSDsX
        2cHGjSQeMNL6JfYEMMzvnEpiYiP2ig0BKBmc7ndOJTGx8SJopwUooK3fOZXEpJNieU2mHQHYMjhIPMFy
        LBY7ApA2wOTFct3YEUBHv3MpiUtHqxfYEUCO37mUxMVy3diZ0pUCMEkH8imgB9lkk01b6qillmp2UcF2
        jrpxS08E0N6NJ08n+lBEEYP5N4NzwlSynlLWskfkrS3XjR0ByMhfcRnAFYyms4kzQ5zGaYwFtrOMYgTF
        gbNcN9KrRxDZXMs4Cmxcmc8U7mQjb/EeJz1/bikAAbRnAhMc9YwhBjOYu5jLXzju6bNLv16HZDCZvzJF
        yMCoB9N5x2NXCykAR5zLfO7nFIEpdmUGL9HbsxxIAdgmi8d4yZV5sSLmcyvexPGXArBJb17jKtcqqQ0/
        5DeemFylAGxxOXM5w+V7DGc+A13PiRSADW7mKdp5cJ9u/JYLXL6HFIBFQvyIBzzqn6Edv+YKV+8g7QAW
        ecTjcIgZPE4bFruWvmwBLHGnD9EwQzzKv7uWumwBLDCeKZavOcFuKthPLbW0JZsO5JFv0XLQmpncy3pX
        8iQFYJqhPGKh7w/zOR/yKZv4NsbRfIoYxgWm524y+R8m4saeklIAJunEz2lt8txaFvAXthucsZ3tLOIU
        RjPRpCmpAzOZgrAo8RHkGMAUIZ6kq6kzT7CAq3jesPqbqOEdJjCDfaZSHsQPXciZTy1AW7rTnQ5kkkWY
        Oo5xiEr2u6BwMdxoagukMKt4EWvBeupZzFJu4gcmnHkmsYZPBefMYwFkMoB+9OO0mL1pPTvZShllPsyL
        G9GVu0ycdZSfYW+312O8SjGz6JfgvBDTuVHwj8RDAfRlOEPJNDijFfnkM4Zq1vIhO717tARMMzFqr+Q/
        2ergHnu5nScTrrrtzUReE5o3jwQwhO9Z8JbJ4WJGsoVivvDm8Qwp4tKE52zkx3zt8D51PMJd3J7gTeMO
        itkvMHceCKAXE23Mb4cYwAA28ia2gl8JZErCl79S7hfixxPmJQ4kiPrYjpuZJTB3Lr8FZHAdP3Hg3jCI
        n3GZZ5b3WJzD0ARn7OIRgW5cC3kzwRlXC50mdlUA3ZjOaIe3aMt47udUNx/TkNsTHK/hQb4ResdZfGx4
        vJ3diHAxcbELKOSuuJOm1eygilpqqOUE2WRzCtnkkhtTLgN4jOdQ3XvUuPRO8PpXz2PYjtMch5NM5zXy
        DM64hldi2hft4JoAirg1ZuIHqaAiql+viXzKJJ8Cera4siMP8SL/cuth45JoL4w3+cCFux7hp8w16Pg6
        cKHNF86WuNQFFHF7jOo/xDIWUmowrDtGOct5k62Eo45k84DrPjjRhPie4fFq5rh05y0sNzwuzkfAFQH0
        59YWCdfwDxaaMpBCDX+PcW5b7qWHG48bl6HkGh5/TXDvr2W2YSN/gbCBoAsC6M7UFr/+nSygrMWv2ohD
        LGN1lEUwm/uEumAnYoTh0X3Md/HeKgsNjmaYMk2bQfgYoA1TWgz9NlHSovLbMZDudKAD7aimisN8wVfU
        684p5zBjyNb8pxO38oLoR47LeYZHX+GYq3f/PVfq8q6niPeE3EW4AK6J2kOunjWURd3yfIbSN8atj7KZ
        lXyp+c8+3uYyumj+czaXsFL0Q8ekvWG8lVpBFRCfw7xv0NfbCAgWE8FdQEEL56V/6qo/xHd4kkkMiKm8
        dpzLw0zTxTmpYSn6vRHHGS67FsdQw8J53531/TqWGBzrmWB8YhahAggxMSrBLXyu+daZR7kt4eLp/jzE
        NRrni6Ms0w2Isrhe5EPHxTjcjqjXMCNKOWL7+cwiVABFUeaL3Xyoe+BHyTeVTogxTOe0yPevWa0bQ5xj
        axm2VYye9STrPHiCesPZf3NlmQihAtC/NR9npWZQdy7TLBl08/gpl0UebxtbNMdCnmxWalTA5Ya/TXEY
        ySzPdCpGCBTA2Si6759pesmCOHZBI9ownocj7cCnum5gkKZ9cAujAv7SdCrOMLJ9Jl0LMFz3rZZNkc8d
        uJs2ttLsHWkHjrJR8/9Q1N3Ek2HoolXh8t3N3KeDkDsIE0A2Z+u+f6pxXfqBA7tVQzuQC2zUjbuHuTyT
        bWxwEhrYyYB9Bg5gYkxiwkpxkO43fkzjHlXIWQ7T7s1jjOGEbhzQ0eWZAePidbBbs0Xi3ynJBKAPILwj
        MvwLMV5A6m24hoep0/0vkQulM4yL130bQBM1cY8ktQCaJ3IKBY1W4XSm6rYqd1cAxvMW3vkoxa8gMZ7T
        ggTQQWedO6nx6B0isDDa0Iv+keVUYkbB8TA2V3kRHaCB+L/zGgupxEeQAPRmyUrNK9sg4QVSSHcAMl00
        CXdMUMVezUm2MpgOEjMOESSA7rpvzbb7ni5UUit60o8sEGQNj0UBNYadgGI6JWecZlBBSdUC6N9Jm7XZ
        xWpCJsmhkO6utQB5tKY+agpKT4FLd7ZyHzHu8oIEoF/v0ywAMcaK2A/ek7tdGQe0a7Qy7jU450zX8qXH
        aMLHnHdVIgQJQL/Ovblxck8AAIXM52bhBqHRjcYXo9X4p3s0JX2uwbGkEkA83N5dKpMHmCO0HSjge40v
        eUYtQCiBt5AYMgzfoaytQo6HIAHoTTTNI1cxAxVjBjGfSYIy0opJtG4c4xsX8CUe5Ox8g3eAekdLUbU5
        FoLeO85bAUAmPxLUDlxCL2ictv7S0C/3Qg/2zTBy/i6nSsg9BAlA/zDNb8mCtkEwgYh2oDP/ATS9u3zL
        NoNz23KVyznqzkUGR9cKuosgAegHTM0C2OFhzA/n7cCNjW8zTQbnMsOzb3F5xeJUwxFUqaC7uCKA3IhH
        3wmPl3MN4vUWfolmOTcyod0kgA2G57fnVhdzcoZhB1CdbAL4hkOabxka1/B/ii6ZBGQxjVdsTEC144bI
        51MbnUHUBF3YDVEWUJHcZ1g1K4WtSRD2GqgfkxZEPq33cO68icHMZ6LFGburdTaLpo6kxPCaTO5xKQdF
        CVYlFQu7kzAB6PvLvEjxH3N9AUUsspjGHAvtQG8u1H1vEsAnCSZdr2CcC0/fjacMj+8W6JMsTACf6YZ7
        7TRGzJWOo+fYYzDzuclUO9CqxftDj8bh4Dd8kuDaR4VOeANk8usEMQlft7TKMlHeBaF1AgUo0gwEX41a
        8+cVWTxoajxwadRyNmgVsfYvTfDsbXhGsIfy4xQaHv9aaOxwgabgj3TfTmVA5PMX/FXgI1tjSMJ2oAvf
        j/Hfpqffm7C57cQsgUahuxPGJJsndFGqQAFsigrico7mPbaY1QIf2hpZPMgfDFxIb4r5vt0xMuf/14S2
        jDN5Tcg+X234WcKYRPsMl41bR6AAwizVfc/iYs23P3m0pjc2ZzOPu2KuTTgvrs/ykMa/lSaevBevOt7c
        pRMvNVoijZgl2CFV6GxgadQESj7DNN/+zO+jJo28pA13Mp/Bke8hFM5lrMFCUyXSty/hYML0c5jFJAfP
        15+5mqeLRwkrBJdLKGzZwVV5K74ZvIBHojT1vi7aZxeu4Rwf4/7Vs4i5FDKAPiYcOyv5S+Onwdxt6qk/
        5zkb4Zy7MIUrTQSjr+PGRAF056gW97QQ7A9QwT+i/nORrnc8wMvMcmXjA7PZvY5FTOFsU369uZFY/p/x
        d1Ppn8XL/MbSwu1spvI2403tRfArF+InC3cIWRhlPm3N6KhYm+U8xRIfA8O3pQ+9TS5VHR4ZIC4w7YBx
        AfN5mvNNFG0eU1nMHSadzIt5x4XSENwFAOTyaIutUL5idVSV92CyhzvktuQEu0wZqMoibVpXfmLgoNGS
        A3zEWjZQ2cJscyqFnMd3KLTQGW7jB2aM6pa7ABcEAIXc2+IX9g1ro2JqhriYK03vmuMGVWxPGOU3zPKI
        911f7rexyrmOnRyghqO04RTa04tOltPYz23mFqQmhwDgPG6L0QTu5eOo/r8TEz3YHjU+9exmL2GO0zbu
        r/EYb0XCQZzDFB922TnCnWan1S0LwKVQsWsJxwgJ0Z1x7GEb2yMFepDnGcb1vgWDbkVPQvyRHYQaIxZ3
        Jp/OOjFkcinvNE4Krbcxz+iUWqa56FXhUgsAxsGiv2YnVdRQSy0n6MoNUYtLveUkf+NdjQdgDvmcoVt3
        tI0VkZ78PG7xcKOVQzzAZvOnJ0sX0EA3ptDLZKrtyTPcTsZt9jEvyqchj2Ga3nqLJix0IVM9Gruo3GfN
        /dtvO4CeffyCFSZnAqvYzF6B05xW6cY0btaN8newiNURv+ZCjVVzC78yudWbM0q5VZD3f3xcHtGcYAEz
        Db1rm6lnF2U++A81EWIEj+tsFmHKeSuyQGSIxtq/i58L88uNVxqvcI8JE7RTPBjS7uSX/NbkQqZaylB9
        8h4A6MBd3K2LaHSUdyPG7LMYFSmwOuYwz7VIIXu4l5c9KQdPRjNhNrCB/gxnSMJ+Pkwlu+jocvwPI4bQ
        j8X8I1L8J3mfbxpj8/YhhxWRVuoDNnIdRYLfCr7ldeZ4Nm3m6iCwJZmcRT/60z3OxpEqZZSxhZNc7etO
        QbCHN3VBqUZEXESOskrn+dCfa4SFwQnzIc86CUKXXG8B8cmiO7m0py2ZhDnGMQ6zl726xVhd+LEnK/Di
        EWY5izXBrsZGXETCbKJUZ9oeyFjHUcvqeZ9XEyxGSUiqCMAsI3nE5KbN7rBZs3NHJldpXMeP8EHUtNeZ
        XJBgZ9T4fM17vC0i/GS6CQByuI/xPnoQbObFyG89N8oJfAdroyaUMjmHIs60YCU4xMcspUTUbsnJYgoW
        RzVP8zf+y7OoPNEM0OzWW8l23drDPHrxFes1L2vHKKGE1hTQj9PJpXOc16zj7GIb6yn1YSc0PUkvAIBS
        JnA/1/rUDgxna2SF0Cf00lVpiDM4g0o+Z5vmpe0kXzaGk86gK53JoYowmRylhhqq2ckeH1919aSEAOAo
        v2Ql/+3xrmFN3MCmRovgIcpjzFrkkksdO9jGrqim/AR72M2XLu4u5hTv5zZtU8oNLPDFWJytWTmwJc45
        WfTlMiZzBedREFkg35ojrE/i6k+ZFqAB/9qBi1jSGDZuP9UGgeTboDSOVk5SzUaKPTDmOiOFWoAGSpnA
        Qs/bgQzNVJA5o3aYVcxP+upPQQFALb/gHnZ7fNfmjRorTJy9i6d5L2kGekakoAAA1nreDvSKmHj2JLhv
        PUuZ6WF0JGekqAC8bwdaRXyY6w0navbyDItFmXU8yVcKs5YJLPKsHWh2EYvnsxDmfWaY9H5IFlJaAFDL
        0/zQox18mmOfxY5+eJBneSOhm3mykeICAPiEGzxpB5rdxWK1AP/kSaczeb6QBgLwqh1o9v6JXsdXxWz+
        6OE+QiJJCwEAfMIT7He1HWi25+n3C1nHE3zmd/Ztk1KWQGOq2MEh8l1zLj8c+aT1HV7LHL8z7oi0aQHg
        IHCEza61A83h47UCUK0nlFSklQBOAPXs4AuhYZQaqIysBMjUxRTa73e2HZJGAqiPVIYb7cCGyCe9A6jX
        JmnRpJEAtHt617ODEqEBKtdHPhVo/lvr2S7CbpFWAtCv7TvJU3wgqB34PDIF1FoXVHKbj4vZxJBWAijT
        zb+1oyPzeE7AlGyYtyOfe+pCRGy0nliSkVYCqIpqA4YAm3nCcTtQEmcr3HqBQZv9Iq0EEB3evRc9gDqH
        7YDKnyKfC3Q7BGwVtG+Pn6SZANZFTdQ0+fFs5gnW2GoHqpkdeakM6QJfwiq/syuANBPA8ahK6RZZsFXH
        /9poB6p5UbNFa6Fu3fC+qPjoqUmaCQBWRblrXKiptM08kWAPED0qT2sim3XVuIUBvJXybwCQhgKoZYnu
        e1su08wO1PEqr5paeh2mhF9qfv3ZjNFNnGzSWAZSmTSaDGpiJcN1Wzh0YDTFml9rCVsZwwjDTdnKWKQL
        ztKaMbo5wOO84Xc2BZGGAjjJ6zyoa9oUxrBKs/T8EG9SzEUMpKBFE3iAz1gXtWIvk9GRreQaKBa0ebv/
        pKEAGnYouVL3n3yuZFkkOiHAEZawhFPoQ0fak8NRvuEbKmPY9jtyWdQu6DtZ7ncWhZGWAoClnBEVgbQT
        V/O3Fpb7moSuHL24JKqzOMDzKeT1m4i0GwQ2EOZ3LRZwZPF9LrYUdqYDl3J5VPUf4TdJvdbPKmkqADjG
        8y32JQhxJtdzvimfoXaM4Dp6Ry1JP8YLnkQI9I407QIAqvkV9+kmbwFaczaFqFSwPc7rYDb5FNAjxhYO
        R3lZRBiXpCKNBQDVzGJKjGjkGeSTT5i9HKSWGmqpI4tTyCabLnSNE4hC5WWNW1i6kNYCaGiyL2dczJ4u
        RK4uILQxHzMv5RZ9mCHNBdCwmV05Nzva3fNbFpjcMyj1SHsBAHzJU4xmrK0I32E+ZVEKrPO3ix0B+Lff
        k21OsowPGMWoqEUdxtSzgWWpNeyzXDd2BJCiXhC1vMtyhvJd+pl4+93HWj5KPYOv5bqxI4Bqv3Npn+OU
        UMKp9KMfp9O9xRZQYQ5TwRdsTZkAD1FYrpsAtQDNHKGUUiBEZzqRRRatOUYdVexL9ZG+JwJI4RZAT5gD
        qdfIG2P5x2nHFFzhdy4lcbG8w4wdAZT7nUtJXCzHqLATLTybqvSdREppatUcq5fYqEi1NlWHyGmPjdDj
        9n7Jqb8iKj2xUS/2BLDa75xKYrLa+iX2BJAOS2LSERv1YrcLSN/ZkdSlQq2wfpEtAaj1sg1IQlbYucju
        61y6rItIJ2zViQ07AIDSlt2arbUl/rOLAtVGfHqbLYB6nD/7nWOJjnl2qt+JW/hcv3Ms0WGzPmwLQC3h
        I7/zLIlQrNqMVO3Epj/T71xLItiuC5uDwAaUdbqYSRK/WKWOtnups1k92QYkBw7qwZEA1IVyViAJeEt1
        YJZz1AWAMoB1hqE2JG5TywDVsh9QMw4dO9TNPOt3CQScGU6q33ELAEo2G+jjdykElo0MUx05Mjt27VJr
        mWAq7JZEPNVc76z6hQSIUNfxsN8lEVDuUR076DruAhpQFjLe79IIHH9Q73CeiCjv3lso9bUwgsdq7hGR
        jKAWAJQurKGvnyUSKDYwUhWyRE+YAEApYA09/CuTAPEVI9RK58mA0ChhagWjrS9NklimnNGiql9wmDi1
        jOH8n/clEihKGWHH+TMegpd4qbu5iDWeFkiwWM4oVeiCZuFr/NTDjGG2dyUSIOp5hu+rghfnCxwEalGu
        ZQ7tvSiVwHCAyep74pN1SQCgnM68qC02JPZZwS2qK5uUurbMW/2KEdyRbgE4fGE3E9Qx7lS/iy1AA0on
        ZnJbMKIRusJxXuBx0f2+FpcFAKD0YTqTpNuIZWr5A8+oLsdi8EAAAEoeDzFZDgtNc5A5zFI9iEzvkQAA
        lGzGMSlq8y1JNMcpZh7vOp3nN4uHAmhAyWUsoxgpZw1asIPVrKJYrKEnEZ4LoAmlPyPoS1/6UxDg8cFx
        /kU55ZSxRrUR4cc5vgmgGSWDjuTQnhxyAhJ9rJ5qqqimisP2lnSKIwkEIPGTYPziJHGRAgg4UgABRwog
        4EgBBBwpgIAjBRBwpAACjhRAwJECCDhSAAFHCiDgSAEEHCmAgCMFEHCkAAKOFEDAkQIIOFIAAUcKIOBI
        AQQcKYCAIwUQcP4fzlO7R3Z3thsAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTMtMTEtMjBUMDk6MDk6MzUt
        MDY6MDBxvWzxAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDEzLTExLTIwVDA5OjA5OjM1LTA2OjAwAODUTQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>